#!/usr/bin/env python
# ARP Scanner using scapy
#
# Usage: arp-scanner-scapy.py <subnet>
# Example: arp-scanner-scapy.py 192.168.1.0/24
# Use CIDR notation!

from scapy.all import *
import ipaddress
import sys

BCAST_MAC = "ff:ff:ff:ff:ff:ff"
PROGRESS_WIDTH = 70

def progress(completed, total):
	width = PROGRESS_WIDTH
	progress = int(width * float(completed) / total)
	percent = "{:3.1f}".format(100 * float(completed)/total)
	sys.stdout.write("\b"*(width + 10) + "[" + 
		"="*progress + " "*(width-progress) +
		"] " + percent + "%")
	sys.stdout.flush()

print "Scanning....."

results = []
prefix = unicode(sys.argv[1])
network = ipaddress.ip_network(prefix)

for i, ip in enumerate(network):
	ip = str(ip)
	arp_req = Ether(dst=BCAST_MAC)/ARP(pdst=ip, hwdst=BCAST_MAC)
	arp_res = srp1(arp_req, timeout=1, verbose=0)
	progress(i+1, network.num_addresses)
	if arp_res:
		results.append((arp_res.psrc, arp_res.hwsrc))

print "\n"
for item in results:
	print item[0] + " belongs to " + item[1]
