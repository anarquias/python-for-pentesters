#!/usr/bin/env python
#
# Simple wifi sniffer that prints out unique SSIDs of nearby wifi networks
# Usage: wifi-sniffer.py <IFACE>
#
# Use airmon-ng to create monitoring interface, like this:
#   sudo airmon-ng check kill
#   sudo airmon-ng start wlan0 
# This will create a monitoring interface (e.g. mon0)
# Supply this iface name as the argument for this script.
# Default IFACE=mon0

import scapy.all as scapy
import sys
import time
import os

iface = "mon0"
if len(sys.argv) > 1:
	iface = sys.argv[1]

aps = []

def check_beacon(packet):
	if packet.haslayer(scapy.Dot11Beacon):
		mac = packet.addr2
		if mac not in aps:
			ssid = packet.info or "<NO SSID>"
			print "{:<25}".format(ssid), mac
			aps.append(mac)

def channel_hop():
	i = 0
	# Change channels every second; neccessary since APs may be emitting
	# beacon frames at different channels
	while True:
		os.system("iw dev " + iface + " set channel " + str(i+1))
		i = (i + 1) % 13 # Scan all 13 2.4Ghz WLAN channels
		time.sleep(1)

pid = os.fork()
if pid == 0:
	# Want child process to handle channel hopping
	channel_hop()
else:
	scapy.sniff(iface=iface, prn=check_beacon)
