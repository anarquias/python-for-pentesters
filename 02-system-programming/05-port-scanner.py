#!/usr/bin/env python
#
# Usage: port-scanner.py <ip>
# Similar to 04-port-scanner.py, but uses multiprocessing lib instead 
# of threading
# Scans ports 0-65535 and prints ones that are listening
# Program does SYN scanning that actually establishes a connection.

import os
import socket
import sys
from multiprocessing import Process

process_batches = []
ip = sys.argv[1]
open_ports = []

def worker_process(port):
    s = socket.socket()
    s.settimeout(0.5)
    response = os.strerror(s.connect_ex(('192.168.1.1', port)))
    if response == 'Success':
        open_ports.append(port)
        print 'Success for port %d!' % port

for i in range(256):
    batch = []
    for j in range(256):
        batch.append(Process(target=worker_process, args=[i*256 + j]))
    process_batches.append(batch)

for batch in process_batches:
    for p in batch:
        p.start()

    for p in batch:
        p.join()

print "Done!"
